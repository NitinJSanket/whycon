<launch>

  <arg name="device" default="25001195"/>
  <arg name="camera_name" default="mv_$(arg device)"/>
  <arg name="fps" default="50"/>
  <arg name="expose_us" default="5000"/>
  <arg name="gain_db" default="35"/>

  <arg name="publish_tf" default="true"/>
  <arg name="publish_vicon" default="true"/>
  <arg name="transform_to_world_frame" default="true"/>  
  <arg name="use_omni_model" default="true"/>
  <arg name="vicon_quad_topic" default="/vicon/QuadrotorBashful/odom"/>
  <arg name="vicon_payload_topic" default="/vicon/PayloadBashful/odom"/>

  <!--group ns="camera">
    <node pkg="image_proc" type="image_proc" name="image_proc"/>
  </group-->

  <!--include file="$(find bluefox2)/launch/single_nodelet.launch">
    <arg name="calib_url" default="file://${ROS_HOME}/camera_info/$(arg camera_name).yaml"/>
    <arg name="device" value="$(arg device)"/>
    <arg name="fps" value="$(arg fps)"/>
    <arg name="expose_us" value="$(arg expose_us)"/>
    <arg name="gain_db" default="$(arg gain_db)"/>
    <arg name="camera" value="camera"/>
  </include-->

  <node name="whycon" type="whycon" pkg="whycon" output="screen">
    <param name="name" value="whycon"/>
    <param name="axis" value="test"/>
    <param name="targets" value="1"/>
    <param name="max_refine" value="1"/>
    <param name="max_attempts" value="1"/>
    <param name="outer_diameter" value="0.03"/>
    <param name="inner_diameter" value="0.0123"/>
    
    <param name="use_omni_model" type="bool" value="$(arg use_omni_model)"/>
    <param name="publish_tf" type="bool" value="$(arg publish_tf)"/>
    <param name="publish_vicon" type="bool" value="$(arg publish_vicon)"/>
    <param name="transform_to_world_frame" type="bool" value="$(arg use_omni_model)"/>
    <param name="vicon_quad_topic" value="$(arg vicon_quad_topic)"/>
    <param name="vicon_payload_topic" value="$(arg vicon_payload_topic)"/>

    <param name="calib_file" value="$(find whycon)/config/calib_results_$(arg camera_name).txt"/>
    <rosparam file="$(find whycon)/config/setup_$(arg camera_name).yaml"/>
  </node>

  <!--node name="robot_pose_publisher" type="robot_pose_publisher" pkg="whycon"/-->

  <!--publish a transform between your robot's base link and the target pose-->
  <!--node pkg="tf" type="static_transform_publisher" name="static_pose" args="0 0 0 0 0 0 1 target base_link 100"/-->

  <!--node name="transformer" type="transformer" pkg="whycon" output="screen"/-->

</launch>
